#!/usr/bin/env spry

code = [
  # This is a local function to recursively calculate factorial.
  factorial = func [
    :n > 0
      then: [n * factorial (n - 1)]
      else: [1]
  ]
  echo (factorial 1)
]

10 repeat: [
  # Spry is homoiconic so we can just for fun modify the block as if it is code.
  # We remove the integer in the paren at the end of the code block and add
  # a random number from 1-20.
  paren = $(code last) # Picks out paren but does not evaluate it
  paren removeLast

  # In Spry the parenthesis is currently needed, evaluation is strict from left to right.
  paren add: (20 random)
  # Spawn fires up a native thread from a threadpool.
  # Spawn will deep copy both the interpreter and the Spry node being passed as argument and then
  # then run it as code in the new interpreter. Currently the result value is not handled.
  spawn code
]
echo "Spawned off 10 threads"

# Sleeping this thread to wait for the 10 above
sleep 1000

echo "Done sleeping, bye"
